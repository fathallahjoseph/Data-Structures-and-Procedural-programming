                                      //problem1//



 function diffArray(arr1, arr2) {
  var newArr = arr1.concat(arr2);
   return newArr.filter(
    (Element) => !arr1.includes(Element) || !arr2.includes(Element)
  );
}
     console.log(diffArray([3, 1, 7, 9], [2, 4, 1, 9, 3]));

                                      //problem2//



 let n = 3;
  function dotProduct(vect_A, vect_B) {
   let product = 0;
   //Loop
    for (let i = 0; i < n; i++) product = product + vect_A[i] * vect_B[i];
     return product;
}
 function crossProduct(vect_A, vect_B, cross_P) {
  cross_P[0] = vect_A[1] * vect_B[2] - vect_A[2] * vect_B[1];
   cross_P[1] = vect_A[2] * vect_B[0] - vect_A[0] * vect_B[2];
    cross_P[2] = vect_A[0] * vect_B[1] - vect_A[1] * vect_B[0];
}
 let vect_A = [3, -5, 4];
  let vect_B = [2, 6, 5];
   let cross_P = [];

 document.write('Dot product:');
  document.write(dotProduct(vect_A, vect_B) + '<br/>');

 document.write('Cross product:');
  crossProduct(vect_A, vect_B, cross_P);
   for (let i = 0; i < n; i++) document.write(cross_P[i] + ' ');
   //joseph create this code *_*//

